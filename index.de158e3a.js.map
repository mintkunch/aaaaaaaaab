{"mappings":"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","sources":["src/main.js"],"sourcesContent":["const { nowInSec, SkyWayAuthToken, SkyWayContext, SkyWayRoom, SkyWayStreamFactory, uuidV4 } = skyway_room;\r\n\r\nconst url = 'wss://<サブドメイン1つ目>.tcpexposer.com'; //サーバー側と接続するためのws/// ws to connect with the server side\r\nconst slider = {};\r\nlet Members = 0;\r\nconst userLang = navigator.language || navigator.userLanguage;\r\nlet lang = userLang.startsWith('ja') ? 'ja' : 'en';\r\n\r\nasync function fetchAppIdAndSecretId() {\r\n    const socket = new WebSocket(url);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        socket.addEventListener('open', () => {\r\n            console.log('WebSocket connection established');\r\n        });\r\n\r\n        socket.addEventListener('message', (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.app_id && data.secret_key) {\r\n                resolve({ app_id: data.app_id, secret_key: data.secret_key });\r\n                socket.close();\r\n            }\r\n        });\r\n\r\n        socket.addEventListener('error', (error) => {\r\n            console.error('WebSocket error:', error);\r\n            reject(error);\r\n        });\r\n\r\n        socket.addEventListener('close', () => {\r\n            console.log('WebSocket connection closed');\r\n        });\r\n    });\r\n}\r\n\r\nasync function establishWebSocketConnection() {\r\n    let socket;\r\n\r\n    const connect = () => {\r\n        return new Promise((resolve, reject) => {\r\n            socket = new WebSocket(url);\r\n\r\n            socket.addEventListener('open', () => {\r\n                console.log('WebSocket connection established');\r\n                resolve(socket);\r\n            });\r\n\r\n            socket.addEventListener('error', (error) => {\r\n                console.error('WebSocket error:', error);\r\n                reject(error);\r\n            });\r\n\r\n            socket.addEventListener('close', () => {\r\n                console.log('WebSocket connection closed');\r\n            });\r\n        });\r\n    };\r\n\r\n    try {\r\n        socket = await connect();\r\n        return socket;\r\n    } catch (error) {\r\n        console.error('Failed to establish WebSocket connection:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nasync function SkyWay_main(token, userName) {\r\n    const { SkyWayContext, SkyWayRoom, SkyWayStreamFactory } = skyway_room;\r\n\r\n    const buttonArea = document.getElementById('button-area');\r\n    const remoteMediaArea = document.getElementById('remote-media-area');\r\n    const roomNameInput = \"transceiver\";\r\n\r\n    const myId = document.getElementById('my-id' + (lang === 'ja' ? '-jp' : ''));\r\n    const myName = document.getElementById('my-name' + (lang === 'ja' ? '-jp' : ''));\r\n    const Memberselem = document.getElementById('Members' + (lang === 'ja' ? '-jp' : ''));\r\n    const IdDisp = document.getElementById('id-disp' + (lang === 'ja' ? '-jp' : ''));\r\n    const joinButton = document.getElementById('join' + (lang === 'ja' ? '-jp' : ''));\r\n    const target = document.getElementById('MuteInfo' + (lang === 'ja' ? '-jp' : ''));\r\n    const NonMutebtn = document.getElementById('NonMute-btn' + (lang === 'ja' ? '-jp' : ''));\r\n    const leavebtn = document.getElementById('leave' + (lang === 'ja' ? '-jp' : ''));\r\n    const participantList = document.getElementById('participant-list' + (lang === 'ja' ? '-jp' : ''));\r\n\r\n    let isMuted = false;\r\n\r\n    const userPositions = {};\r\n\r\n    const socket = await establishWebSocketConnection();\r\n\r\n    // マイクストリームの取得\r\n    let audio = null;\r\n    try {\r\n        audio = await SkyWayStreamFactory.createMicrophoneAudioStream({\r\n            audio: {\r\n                echoCancellation: true,\r\n                noiseSuppression: true,\r\n                autoGainControl: true\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.warn('マイクの権限がないか、エラーが発生しました。ミュートで参加します。');\r\n        if (lang === 'ja') {\r\n            alert('マイクの権限がないため、ミュートで参加します。');\r\n        } else {\r\n            alert('You will join muted since microphone access is not granted.');\r\n        }\r\n        isMuted = true;\r\n    }\r\n\r\n    if (roomNameInput === '') return;\r\n\r\n    const context = await SkyWayContext.Create(token);\r\n    const room = await SkyWayRoom.FindOrCreate(context, {\r\n        type: 'p2p',\r\n        name: roomNameInput,\r\n    });\r\n    const me = await room.join({ name: userName });\r\n\r\n    // マイクストリームが取得できた場合のみ公開する\r\n    let publication = null;\r\n    if (audio) {\r\n        publication = await me.publish(audio);\r\n    }\r\n\r\n    console.log(`${userName} is connected`);\r\n\r\n    if (lang === 'ja') {\r\n        target.textContent = isMuted ? \"ミュート中\" : \"ミュート解除中\";\r\n        Memberselem.textContent = Members + \"人\";\r\n    } else {\r\n        target.textContent = isMuted ? \"Muted\" : \"Unmuted\";\r\n        Memberselem.textContent = Members + \"people\";\r\n    }\r\n    NonMutebtn.style.backgroundColor = isMuted ? \"red\" : \"rgb(147, 235, 235)\";\r\n    myId.textContent = me.id;\r\n    myName.textContent = userName;\r\n    IdDisp.style.visibility = \"visible\";\r\n    NonMutebtn.style.visibility = \"visible\";\r\n    NonMutebtn.style.opacity = 1;\r\n    joinButton.style.visibility = \"hidden\";\r\n    leavebtn.style.visibility = \"visible\";\r\n\r\n    leavebtn.onclick = () => {\r\n        me.leave();\r\n        location.reload();\r\n    };\r\n\r\n    // ミュートボタンの処理\r\n    NonMutebtn.addEventListener('click', async () => {\r\n        if (isMuted) {\r\n            // ミュート解除時にマイクの権限を要求\r\n            const micPermissionStatus = await navigator.permissions.query({ name: 'microphone' });\r\n\r\n            // マイク権限が「拒否」されている場合は、権限を要求する\r\n            if (micPermissionStatus.state !== 'granted') {\r\n                try {\r\n                    // 権限が付与され、マイクが有効になった場合にミュート解除\r\n                    isMuted = false;\r\n                    if (lang === 'ja') {\r\n                        target.textContent = \"ミュート解除中\";\r\n                    } else {\r\n                        target.textContent = \"Unmuted\";\r\n                    }\r\n                    NonMutebtn.style.backgroundColor = \"rgb(147, 235, 235)\";\r\n                    // マイクストリームの取得を試みる\r\n                    const audio = await SkyWayStreamFactory.createMicrophoneAudioStream({\r\n                        audio: {\r\n                            echoCancellation: true,\r\n                            noiseSuppression: true,\r\n                            autoGainControl: true\r\n                        }\r\n                    });\r\n\r\n                    // ストリームが取得できた場合、パブリッシュする\r\n                    if (publication) {\r\n                        await publication.replace(audio);\r\n                    } else {\r\n                        publication = await me.publish(audio);\r\n                    }\r\n                    await publication.enable();\r\n                } catch (error) {\r\n                    // 権限が付与され、マイクが有効になった場合にミュート解除\r\n                    isMuted = true;\r\n                    if (lang === 'ja') {\r\n                        target.textContent = \"ミュート中\";\r\n                    } else {\r\n                        target.textContent = \"Muted\";\r\n                    }\r\n                    NonMutebtn.style.backgroundColor = \"red\";\r\n                    // マイク権限が拒否された場合の処理\r\n                    console.error('マイク権限が拒否されました。ミュートのままです。', error);\r\n                    if (lang === 'ja') {\r\n                        alert('マイクの権限が拒否されたため、ミュート解除できません。');\r\n                    } else {\r\n                        alert('Microphone access was denied. Unable to unmute.');\r\n                    }\r\n                }\r\n            } else {\r\n                // 既にマイクの権限が付与されている場合は、普通にミュート解除\r\n                await publication.enable();\r\n                isMuted = false;\r\n                if (lang === 'ja') {\r\n                    target.textContent = \"ミュート解除中\";\r\n                } else {\r\n                    target.textContent = \"Unmuted\";\r\n                }\r\n                NonMutebtn.style.backgroundColor = \"rgb(147, 235, 235)\";\r\n            }\r\n        } else {\r\n            // ミュート状態にする\r\n            isMuted = true;\r\n            if (lang === 'ja') {\r\n                target.textContent = \"ミュート中\";\r\n            } else {\r\n                target.textContent = \"Muted\";\r\n            }\r\n            NonMutebtn.style.backgroundColor = \"red\";\r\n            await publication.disable();\r\n        }\r\n    });\r\n\r\n    // 参加者リストの更新関数\r\n    const updateParticipantList = () => {\r\n        Members = 0\r\n        participantList.innerHTML = '';\r\n        room.members.forEach(member => {\r\n            Members++; // ここでもメンバー数を増やす\r\n            if (lang === 'ja') {\r\n                Memberselem.textContent = Members + \"人\";\r\n            } else {\r\n                Memberselem.textContent = Members + \"people\";\r\n            }\r\n            const listItem = document.createElement('li');\r\n            const volumeSlider = document.createElement('input');\r\n            const volumeIcon = document.createElement('span'); // 🔊アイコン用の要素\r\n\r\n            // 参加者の名前を取得\r\n            const name = member.name || member.id;\r\n            listItem.textContent = name;\r\n\r\n            // 音量アイコンを追加\r\n            volumeIcon.textContent = '🔊';\r\n            volumeIcon.style.marginLeft = '10px'; // 名前とアイコンの間隔を調整\r\n\r\n            // 音量調整用のスライダーを作成\r\n            volumeSlider.type = 'range';\r\n            volumeSlider.min = '0';\r\n            volumeSlider.max = '100';\r\n            volumeSlider.value = slider[member.name] !== undefined ? slider[member.name] : 100; // スライダーの初期値は保存されている値、なければ100\r\n            // スライダーの変更イベントをリッスンし、sliderオブジェクトに値を保存\r\n            volumeSlider.addEventListener('input', () => {\r\n                slider[member.name] = volumeSlider.value; // スライダーの値をslider[member.name]に保存\r\n                if (slider[member.name] == 0) {\r\n                    volumeIcon.textContent = '🔇';\r\n                } else if (slider[member.name] > 50) {\r\n                    volumeIcon.textContent = '🔊';\r\n                } else if (slider[member.name] <= 50 && slider[member.name] > 25) {\r\n                    volumeIcon.textContent = '🔉';\r\n                } else if (slider[member.name] <= 25 && slider[member.name] > 0) {\r\n                    volumeIcon.textContent = '🔈';\r\n                }\r\n            });\r\n            // リストアイテムにアイコンとスライダーを追加\r\n            listItem.appendChild(volumeIcon);\r\n            listItem.appendChild(volumeSlider);\r\n            participantList.appendChild(listItem);\r\n        });\r\n    };\r\n\r\n    // subscribeAndAttach内で呼ばれる音量調整関数を修正\r\n    const subscribeAndAttach = async (publication) => {\r\n        if (publication.publisher.id === me.id) return;\r\n\r\n        const subscribeButton = document.createElement('button');\r\n        subscribeButton.textContent = `${publication.publisher.name || publication.publisher.id}: ${publication.contentType}`;\r\n        buttonArea.appendChild(subscribeButton);\r\n\r\n        subscribeButton.onclick = async () => {\r\n            try {\r\n                const { stream } = await me.subscribe(publication.id);\r\n\r\n                const oldMediaElement = remoteMediaArea.querySelector(`[data-username=\"${publication.publisher.name || publication.publisher.id}\"]`);\r\n                if (oldMediaElement) {\r\n                    remoteMediaArea.removeChild(oldMediaElement);\r\n                }\r\n\r\n                let newMedia;\r\n                switch (stream.track.kind) {\r\n                    case 'audio':\r\n                        newMedia = document.createElement('audio');\r\n                        newMedia.controls = true;\r\n                        newMedia.autoplay = true;\r\n                        newMedia.setAttribute('data-username', publication.publisher.name || publication.publisher.id);\r\n                        newMedia.volume = 0;\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n                stream.attach(newMedia);\r\n                remoteMediaArea.appendChild(newMedia);\r\n\r\n                // WebSocketのメッセージイベントをリッスンし、位置データに基づいて音量を調整\r\n                socket.addEventListener('message', (event) => {\r\n                    const data = JSON.parse(event.data);\r\n                    const positions = data.positions;\r\n                    serverDistance = data.distance;\r\n                    for (const [name, position] of Object.entries(positions)) {\r\n                        if (!userPositions[name]) {\r\n                            userPositions[name] = { x: 0, y: 10000, z: 0 };\r\n                        } else if (!position || Object.keys(position).length === 0) {\r\n                            userPositions[name] = { x: 0, y: 10000, z: 0 };\r\n                        } else {\r\n                            userPositions[name] = position;\r\n                        }\r\n\r\n                        const mediaElement = document.querySelector(`[data-username=\"${name}\"]`);\r\n                        if (name !== myName.textContent && mediaElement && userPositions[myName.textContent] && userPositions[name] && position && Object.keys(position).length >= 1) {\r\n                            adjustVolume(mediaElement, userPositions[myName.textContent], userPositions[name], name);\r\n                        }\r\n                    }\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error('Failed to subscribe to publication:', error);\r\n            }\r\n        };\r\n\r\n        subscribeButton.click();\r\n        updateParticipantList(); // 参加者リストの更新\r\n    };\r\n\r\n    room.onStreamPublished.add((e) => {\r\n        subscribeAndAttach(e.publication);\r\n    });\r\n\r\n    room.onMemberJoined.add((e) => {\r\n        // メンバー数を更新する\r\n        updateParticipantList();\r\n    });\r\n\r\n    room.onMemberLeft.add((e) => {\r\n        updateParticipantList();\r\n    });\r\n\r\n    room.publications.forEach(publication => {\r\n        subscribeAndAttach(publication);\r\n    });\r\n\r\n    updateParticipantList(); // 初期参加者リストの更新\r\n\r\n    if (publication) {\r\n        await publication.enable();\r\n    }\r\n}\r\n\r\n// ページ読み込み時にボタンイベントハンドラを設定\r\nwindow.onload = async function () {\r\n    const joinButton = document.getElementById('join' + (lang === 'ja' ? '-jp' : ''));\r\n    joinButton.onclick = async () => {\r\n        const userName = document.getElementById('user-name' + (lang === 'ja' ? '-jp' : '')).value.trim();\r\n        if (userName === '') {\r\n            if (lang === 'ja') {\r\n                alert('名前を入力してください');\r\n            } else {\r\n                alert('Please enter your name.');\r\n            }\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // WebSocketでapp_idとsecret_idを取得\r\n            const { app_id, secret_key } = await fetchAppIdAndSecretId();\r\n\r\n            // Tokenの作成\r\n            const Token = new SkyWayAuthToken({\r\n                jti: uuidV4(),\r\n                iat: nowInSec(),\r\n                exp: nowInSec() + 60 * 60 * 24 * 3,\r\n                scope: {\r\n                    app: {\r\n                        id: app_id,\r\n                        turn: true,\r\n                        actions: ['read'],\r\n                        channels: [\r\n                            {\r\n                                id: '*',\r\n                                name: '*',\r\n                                actions: ['write'],\r\n                                members: [\r\n                                    {\r\n                                        id: '*',\r\n                                        name: '*',\r\n                                        actions: ['write'],\r\n                                        publication: {\r\n                                            actions: ['write'],\r\n                                        },\r\n                                        subscription: {\r\n                                            actions: ['write'],\r\n                                        },\r\n                                    },\r\n                                ],\r\n                                sfuBots: [\r\n                                    {\r\n                                        actions: ['write'],\r\n                                        forwardings: [\r\n                                            {\r\n                                                actions: ['write'],\r\n                                            },\r\n                                        ],\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ],\r\n                    },\r\n                },\r\n            }).encode(secret_key);\r\n\r\n            await SkyWay_main(Token, userName);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    navigator.permissions.query({ name: 'microphone' }).then((result) => {\r\n        if (result.state === 'granted') {\r\n            console.log(\"マイクを利用します\");\r\n        } else {\r\n            if (lang === 'ja') {\r\n                alert(\"マイクを使用する権限を与えて下さい\");\r\n            } else {\r\n                alert(\"Please grant microphone permissions.\");\r\n            }\r\n            console.log(\"マイクの権限取得エラーです\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction calculateDistance(pos1, pos2) {\r\n    return Math.sqrt(\r\n        Math.pow(pos1.x - pos2.x, 2) +\r\n        Math.pow(pos1.y - pos2.y, 2) +\r\n        Math.pow(pos1.z - pos2.z, 2)\r\n    );\r\n}\r\n\r\n// 音量調整を位置データとスライダーの値を使って行う関数\r\nfunction adjustVolume(mediaElement, pos1, pos2, name) {\r\n    if (!pos1 || !pos2 || typeof pos1.x !== 'number' || typeof pos1.y !== 'number' || typeof pos1.z !== 'number' ||\r\n        typeof pos2.x !== 'number' || typeof pos2.y !== 'number' || typeof pos2.z !== 'number') {\r\n        console.error('Invalid positions:', pos1, pos2);\r\n        mediaElement.volume = 0;\r\n        mediaElement.muted = true;\r\n        return;\r\n    }\r\n    const sliderValue = slider[name] !== undefined ? Number(slider[name]) : 100; // デフォルト値は100\r\n    const SliderVolume = sliderValue / 100;\r\n    const distance = calculateDistance(pos1, pos2);\r\n    const minVolume = 0;\r\n    const volume = Math.max(minVolume, 1 - (distance / serverDistance)); // serverDistance を使用\r\n    if (volume == 0) {\r\n        mediaElement.volume = minVolume;\r\n        mediaElement.muted = true;\r\n    } else {\r\n        mediaElement.volume = volume * SliderVolume\r\n        mediaElement.muted = false;\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}